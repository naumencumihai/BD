DESC EMP
DESC DEPT

-- DECODE | EVALUEAZA O EXPRESIE
-- DECODE(EXPR, VAL 1, RES 1, VAL2, RES 2, ... RES )

SELECT ENAME, SAL,
	DECODE(SIGN(SAL - 1000), -1, 'SALARIU MIC', 'SALARIU MARE') 
	TIP_SALARIU
FROM EMP;

SELECT ENAME, SAL,
	DECODE(SIGN(SAL - 1000), -1, 'SALARIU MIC', 
	DECODE(SIGN(SAL - 2000), -1, 'SALARIU MEDIU', 'SALARIU MARE')) 
	TIP_SALARIU
FROM EMP;

-- SA SE AFISEZE PT FIECARE ANGAJAT, NUMELE LUI, JOBUL,
-- TRADUCEREA JOBULUI IN ROMANA

--SELECT JOB FROM EMP;

SELECT ENAME, JOB,
	DECODE(JOB, 
		'CLERK', 'FUNCTIONAR', 
		'SALESMAN', 'VANZATOR',
		'MANAGER', 'SEF', 
		'ANALYST', 'ANALIST', 
		'PRESIDENT', 'PRESEDINTE')
FROM EMP;


/*
-- FORMA 1 CASE

CASE EXPR
	WHEN VAL1 THEN RES1
	WHEN VAL2 THEN RES2
	....

	ELSE RES_DEFAULT
END


SELECT ENAME, SAL,
	CASE JOB
		WHEN 'CLERK' THEN 'FUNCTIONAR'
		WHEN ' SALESMAN' THEN 'AGENT VANZARI'
		ELSE 'ALTCEVA'
	END TRADUCERE
FROM EMP;

-- FORMA 2 CASE

CASE
	WHEN EXPR1 THEN RES1
	WHEN EXPR2 THEN RES2
	...
	ELSE RES_DEFAULT
END

*/

-- PENTRU TOTI ANGAJATII CARE AU VENIT INAINTE DE 1981
-- SA AFISAM CA SUNT ANGAJATI VECHI
-- INTRE 81 82 ATUNCI RECENTI
-- 83 IN SUS FOARTE NOI


SELECT ENAME, HIREDATE,
	CASE
		WHEN EXTRACT(YEAR FROM HIREDATE) < 1981 
			THEN 'FOARTE VECHI'
		WHEN EXTRACT(YEAR FROM HIREDATE) < 1983
			THEN 'RECENT'
		ELSE 'FOARTE NOU'
	END VECHIME
FROM EMP;



/*

SELECT COUNT(*) FROM EMP;
SELECT MOD(EMPNO, 2) FROM EMP;

*/

-- COUNT - FUNCTIE DE GRUP (SE APLICA PE MAI MULTE ELEMENTE)

-- PT FIECARE DEPARTAMENT DENUMIREA SI NR DE ANGAJATI


SELECT D.DNAME, D.LOC, COUNT(*)
FROM EMP A JOIN DEPT D
	ON A.DEPTNO = D.DEPTNO
WHERE A.SAL >= 1000
GROUP BY D.DNAME, D.LOC
HAVING COUNT(*) > 3;


-- PE WHERE NU MERG FUNCTII DE GRUP
-- HAVING FARA GROUP BY NU SE POATE
-- IN GRUP BY TOATE COLOANELE CARE NU APAR IN FUNCTII DE GRUP

/*

SA SE AFISEZE PT FIECARE ANGAJAT O PRIMA CARE:
DACA ANGAJATUL NU PRIMESTE COMISION, PRIMA LUI ESTE
EGALA CU SALRIUL MINIM PE COMPANIE
DACA PRIMESTE COMINSION PRIMA
EGALA CU SALARIUL MEDIU PE COMPANIE
DACA ANGAJATUL ESTE SEFUL CEL MARE SAU UNUL DIN MANAGERI
ATUNCI EI NU PRIMESC PRIMA

*/

SELECT A.ENAME, A.JOB, AVG(C.SAL) AVG, MIN(C.SAL) MIN,
	CASE
		WHEN A.JOB IN ('PRESIDENT', 'MANAGER')
			THEN 0
		WHEN NVL(A.COMM, 0) = 0
			THEN MIN(C.SAL)
		ELSE AVG(C.SAL)
	END PRIMA
FROM EMP A, EMP C
GROUP BY A.ENAME, A.JOB, A.COMM;


/*
=== TEST ===

SA SE ACORDE O PRIMA PENTRU FIECARE SEF CARE ARE CEL PUTIN 3 SUBALTERNI
(MGR = EMPNO) DIN DEPARTAMENTUL DIFERIT DE ACCOUNTING
SE VA AFISA NUMELE SEFULUI, DENUMIREA DEPT SAU, PRIMA CALCULATA
SI NUMARUL SUBALTERNILOR SAI
PRIMA SE CALCULEAZA CA FIIND JUMATATE DIN SAL TRUNCHIATA LA VALORI INTREGI

*/

SELECT A.ENAME, D.DNAME, TRUNC(A.SAL / 2, 0) PRIMA, COUNT(*) NR_SUBALTERNI
FROM EMP A JOIN DEPT D ON A.DEPTNO = D.DEPTNO,  EMP C
	WHERE A.EMPNO = C.MGR
	AND
	D.DNAME NOT LIKE 'ACCOUNTING'
GROUP BY A.ENAME, D.DNAME, A.SAL
HAVING COUNT(*) >= 3;


